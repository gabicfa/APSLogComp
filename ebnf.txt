declaracoes = "{", declaracao+, "}";
declaracao = (funcao|listaAfirm);
funcao = "FUNCAO", id, "(",(|listaVar), ")", "{",listaAfirm,"}";
chama = "(", (|listaAfirm), ")";
listaVar = id, (|",",listaVar);
listaAfirm = afirmacao+;
afirmacao = enquanto|caso|imprimir|(id, chama, ";" )|(id, atribui, ";")|retornar;
atribui = "=" (ladoDir|scan);
scan = "SCAN", "(",")";
imprimir = "IMPRIMIR", "(", ladoDir, ")";
ladoDir = termo, {("+"|"-"), termo};
retornar = "RETORNAR", "(", ladoDir, ")";
termo = fator, {("*"|"/"), fator};
fator = (("+"|"-"),(inteiro| id))|(inteiro| id)|(id, chama)|( "(", ladoDir, ")");
enquanto = "ENQUANTO", expressao, "{", listaAfirm, "}";
caso = "CASO", expressao, "{", listaAfirm, "}", (|("SENAO", "{", listaAfirm, "}") );
expressao = "(", id, (">"|"<"|"=="|"!="), ladoDir, ")" );
inteiro = digito+;
id = letra+|latra+(digito+);
letra = [a-z]+
digito=[0-9];


