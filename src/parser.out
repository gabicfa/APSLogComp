Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> gab
Rule 1     gab -> programa
Rule 2     programa -> ABRE_CHAVES declaracoes FECHA_CHAVES
Rule 3     declaracoes -> declaracoes funcao
Rule 4     declaracoes -> declaracoes listaAfirm
Rule 5     declaracoes -> empty
Rule 6     declaracoes_sem_func -> declaracoes_sem_func listaAfirm
Rule 7     declaracoes_sem_func -> empty
Rule 8     declaracoes_para_func -> declaracoes_para_func listaAfirmFunc
Rule 9     declaracoes_para_func -> empty
Rule 10    funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES
Rule 11    chama -> ABRE_PAREN listaVar FECHA_PAREN
Rule 12    listaVar -> ID
Rule 13    listaVar -> empty
Rule 14    listaVar -> ID VIRG listaVar
Rule 15    listaAfirm -> listaAfirm afirmacao
Rule 16    listaAfirm -> empty
Rule 17    listaAfirmFunc -> listaAfirmFunc afirmacaoFunc
Rule 18    listaAfirmFunc -> empty
Rule 19    afirmacao -> enquanto
Rule 20    afirmacao -> caso
Rule 21    afirmacao -> imprimir
Rule 22    afirmacaoFunc -> afirmacao
Rule 23    afirmacaoFunc -> retornar
Rule 24    afirmacao -> ID chama PONTO_VIRG
Rule 25    afirmacao -> ID atribui PONTO_VIRG
Rule 26    atribui -> ATRI ladoDir
Rule 27    atribui -> ATRI scan
Rule 28    scan -> SCAN ABRE_PAREN FECHA_PAREN
Rule 29    imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
Rule 30    ladoDir -> termo ADI termo
Rule 31    ladoDir -> termo SUB termo
Rule 32    ladoDir -> termo
Rule 33    retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
Rule 34    termo -> fator
Rule 35    termo -> fator MULT fator
Rule 36    termo -> fator DIV fator
Rule 37    fator -> ADI NUMERO
Rule 38    fator -> SUB NUMERO
Rule 39    fator -> NUMERO
Rule 40    fator -> ADI ID
Rule 41    fator -> SUB ID
Rule 42    fator -> ID
Rule 43    fator -> ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
Rule 44    fator -> ID chama
Rule 45    enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
Rule 46    caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
Rule 47    caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
Rule 48    expressao -> ABRE_PAREN ID BIGGER ladoDir FECHA_PAREN
Rule 49    expressao -> ABRE_PAREN ID LESS ladoDir FECHA_PAREN
Rule 50    expressao -> ABRE_PAREN ID EQUALS ladoDir FECHA_PAREN
Rule 51    expressao -> ABRE_PAREN ID DIFER ladoDir FECHA_PAREN
Rule 52    empty -> <empty>

Terminals, with rules where they appear

ABRE_CHAVES          : 2 10 45 46 47 47
ABRE_PAREN           : 10 11 28 29 33 43 48 49 50 51
ADI                  : 30 37 40
ATRI                 : 26 27
BIGGER               : 48
CASO                 : 46 47
DIFER                : 51
DIV                  : 36
ENQUANTO             : 45
EQUALS               : 50
FECHA_CHAVES         : 2 10 45 46 47 47
FECHA_PAREN          : 10 11 28 29 33 43 48 49 50 51
FUNCAO               : 10
ID                   : 10 12 14 24 25 40 41 42 44 48 49 50 51
IMPRIMIR             : 29
LESS                 : 49
MULT                 : 35
NUMERO               : 37 38 39
PONTO_VIRG           : 24 25 29 33 43
RETORNAR             : 33
SCAN                 : 28
SENAO                : 47
SUB                  : 31 38 41
VIRG                 : 14
error                : 

Nonterminals, with rules where they appear

afirmacao            : 15 22
afirmacaoFunc        : 17
atribui              : 25
caso                 : 20
chama                : 24 44
declaracoes          : 2 3 4
declaracoes_para_func : 8 10
declaracoes_sem_func : 6 45 46 47 47
empty                : 5 7 9 13 16 18
enquanto             : 19
expressao            : 45 46 47
fator                : 34 35 35 36 36
funcao               : 3
gab                  : 0
imprimir             : 21
ladoDir              : 26 29 33 43 48 49 50 51
listaAfirm           : 4 6 15
listaAfirmFunc       : 8 17
listaVar             : 10 11 14
programa             : 1
retornar             : 23
scan                 : 27
termo                : 30 30 31 31 32

Parsing method: LALR

state 0

    (0) S' -> . gab
    (1) gab -> . programa
    (2) programa -> . ABRE_CHAVES declaracoes FECHA_CHAVES

    ABRE_CHAVES     shift and go to state 3

    gab                            shift and go to state 1
    programa                       shift and go to state 2

state 1

    (0) S' -> gab .



state 2

    (1) gab -> programa .

    $end            reduce using rule 1 (gab -> programa .)


state 3

    (2) programa -> ABRE_CHAVES . declaracoes FECHA_CHAVES
    (3) declaracoes -> . declaracoes funcao
    (4) declaracoes -> . declaracoes listaAfirm
    (5) declaracoes -> . empty
    (52) empty -> .

    FECHA_CHAVES    reduce using rule 52 (empty -> .)
    FUNCAO          reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

    declaracoes                    shift and go to state 4
    empty                          shift and go to state 5

state 4

    (2) programa -> ABRE_CHAVES declaracoes . FECHA_CHAVES
    (3) declaracoes -> declaracoes . funcao
    (4) declaracoes -> declaracoes . listaAfirm
    (10) funcao -> . FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES
    (15) listaAfirm -> . listaAfirm afirmacao
    (16) listaAfirm -> . empty
    (52) empty -> .

  ! shift/reduce conflict for FECHA_CHAVES resolved as shift
  ! shift/reduce conflict for FUNCAO resolved as shift
    FECHA_CHAVES    shift and go to state 6
    FUNCAO          shift and go to state 9
    ID              reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

  ! FECHA_CHAVES    [ reduce using rule 52 (empty -> .) ]
  ! FUNCAO          [ reduce using rule 52 (empty -> .) ]

    funcao                         shift and go to state 7
    listaAfirm                     shift and go to state 8
    empty                          shift and go to state 10

state 5

    (5) declaracoes -> empty .

    FECHA_CHAVES    reduce using rule 5 (declaracoes -> empty .)
    FUNCAO          reduce using rule 5 (declaracoes -> empty .)
    ID              reduce using rule 5 (declaracoes -> empty .)
    ENQUANTO        reduce using rule 5 (declaracoes -> empty .)
    CASO            reduce using rule 5 (declaracoes -> empty .)
    IMPRIMIR        reduce using rule 5 (declaracoes -> empty .)


state 6

    (2) programa -> ABRE_CHAVES declaracoes FECHA_CHAVES .

    $end            reduce using rule 2 (programa -> ABRE_CHAVES declaracoes FECHA_CHAVES .)


state 7

    (3) declaracoes -> declaracoes funcao .

    FECHA_CHAVES    reduce using rule 3 (declaracoes -> declaracoes funcao .)
    FUNCAO          reduce using rule 3 (declaracoes -> declaracoes funcao .)
    ID              reduce using rule 3 (declaracoes -> declaracoes funcao .)
    ENQUANTO        reduce using rule 3 (declaracoes -> declaracoes funcao .)
    CASO            reduce using rule 3 (declaracoes -> declaracoes funcao .)
    IMPRIMIR        reduce using rule 3 (declaracoes -> declaracoes funcao .)


state 8

    (4) declaracoes -> declaracoes listaAfirm .
    (15) listaAfirm -> listaAfirm . afirmacao
    (19) afirmacao -> . enquanto
    (20) afirmacao -> . caso
    (21) afirmacao -> . imprimir
    (24) afirmacao -> . ID chama PONTO_VIRG
    (25) afirmacao -> . ID atribui PONTO_VIRG
    (45) enquanto -> . ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (46) caso -> . CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (47) caso -> . CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (29) imprimir -> . IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENQUANTO resolved as shift
  ! shift/reduce conflict for CASO resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
    FECHA_CHAVES    reduce using rule 4 (declaracoes -> declaracoes listaAfirm .)
    FUNCAO          reduce using rule 4 (declaracoes -> declaracoes listaAfirm .)
    ID              shift and go to state 15
    ENQUANTO        shift and go to state 16
    CASO            shift and go to state 17
    IMPRIMIR        shift and go to state 18

  ! ID              [ reduce using rule 4 (declaracoes -> declaracoes listaAfirm .) ]
  ! ENQUANTO        [ reduce using rule 4 (declaracoes -> declaracoes listaAfirm .) ]
  ! CASO            [ reduce using rule 4 (declaracoes -> declaracoes listaAfirm .) ]
  ! IMPRIMIR        [ reduce using rule 4 (declaracoes -> declaracoes listaAfirm .) ]

    afirmacao                      shift and go to state 11
    enquanto                       shift and go to state 12
    caso                           shift and go to state 13
    imprimir                       shift and go to state 14

state 9

    (10) funcao -> FUNCAO . ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES

    ID              shift and go to state 19


state 10

    (16) listaAfirm -> empty .

    ID              reduce using rule 16 (listaAfirm -> empty .)
    ENQUANTO        reduce using rule 16 (listaAfirm -> empty .)
    CASO            reduce using rule 16 (listaAfirm -> empty .)
    IMPRIMIR        reduce using rule 16 (listaAfirm -> empty .)
    FECHA_CHAVES    reduce using rule 16 (listaAfirm -> empty .)
    FUNCAO          reduce using rule 16 (listaAfirm -> empty .)


state 11

    (15) listaAfirm -> listaAfirm afirmacao .

    ID              reduce using rule 15 (listaAfirm -> listaAfirm afirmacao .)
    ENQUANTO        reduce using rule 15 (listaAfirm -> listaAfirm afirmacao .)
    CASO            reduce using rule 15 (listaAfirm -> listaAfirm afirmacao .)
    IMPRIMIR        reduce using rule 15 (listaAfirm -> listaAfirm afirmacao .)
    FECHA_CHAVES    reduce using rule 15 (listaAfirm -> listaAfirm afirmacao .)
    FUNCAO          reduce using rule 15 (listaAfirm -> listaAfirm afirmacao .)


state 12

    (19) afirmacao -> enquanto .

    ID              reduce using rule 19 (afirmacao -> enquanto .)
    ENQUANTO        reduce using rule 19 (afirmacao -> enquanto .)
    CASO            reduce using rule 19 (afirmacao -> enquanto .)
    IMPRIMIR        reduce using rule 19 (afirmacao -> enquanto .)
    FECHA_CHAVES    reduce using rule 19 (afirmacao -> enquanto .)
    FUNCAO          reduce using rule 19 (afirmacao -> enquanto .)
    RETORNAR        reduce using rule 19 (afirmacao -> enquanto .)


state 13

    (20) afirmacao -> caso .

    ID              reduce using rule 20 (afirmacao -> caso .)
    ENQUANTO        reduce using rule 20 (afirmacao -> caso .)
    CASO            reduce using rule 20 (afirmacao -> caso .)
    IMPRIMIR        reduce using rule 20 (afirmacao -> caso .)
    FECHA_CHAVES    reduce using rule 20 (afirmacao -> caso .)
    FUNCAO          reduce using rule 20 (afirmacao -> caso .)
    RETORNAR        reduce using rule 20 (afirmacao -> caso .)


state 14

    (21) afirmacao -> imprimir .

    ID              reduce using rule 21 (afirmacao -> imprimir .)
    ENQUANTO        reduce using rule 21 (afirmacao -> imprimir .)
    CASO            reduce using rule 21 (afirmacao -> imprimir .)
    IMPRIMIR        reduce using rule 21 (afirmacao -> imprimir .)
    FECHA_CHAVES    reduce using rule 21 (afirmacao -> imprimir .)
    FUNCAO          reduce using rule 21 (afirmacao -> imprimir .)
    RETORNAR        reduce using rule 21 (afirmacao -> imprimir .)


state 15

    (24) afirmacao -> ID . chama PONTO_VIRG
    (25) afirmacao -> ID . atribui PONTO_VIRG
    (11) chama -> . ABRE_PAREN listaVar FECHA_PAREN
    (26) atribui -> . ATRI ladoDir
    (27) atribui -> . ATRI scan

    ABRE_PAREN      shift and go to state 22
    ATRI            shift and go to state 23

    chama                          shift and go to state 20
    atribui                        shift and go to state 21

state 16

    (45) enquanto -> ENQUANTO . expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (48) expressao -> . ABRE_PAREN ID BIGGER ladoDir FECHA_PAREN
    (49) expressao -> . ABRE_PAREN ID LESS ladoDir FECHA_PAREN
    (50) expressao -> . ABRE_PAREN ID EQUALS ladoDir FECHA_PAREN
    (51) expressao -> . ABRE_PAREN ID DIFER ladoDir FECHA_PAREN

    ABRE_PAREN      shift and go to state 25

    expressao                      shift and go to state 24

state 17

    (46) caso -> CASO . expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (47) caso -> CASO . expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (48) expressao -> . ABRE_PAREN ID BIGGER ladoDir FECHA_PAREN
    (49) expressao -> . ABRE_PAREN ID LESS ladoDir FECHA_PAREN
    (50) expressao -> . ABRE_PAREN ID EQUALS ladoDir FECHA_PAREN
    (51) expressao -> . ABRE_PAREN ID DIFER ladoDir FECHA_PAREN

    ABRE_PAREN      shift and go to state 25

    expressao                      shift and go to state 26

state 18

    (29) imprimir -> IMPRIMIR . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG

    ABRE_PAREN      shift and go to state 27


state 19

    (10) funcao -> FUNCAO ID . ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES

    ABRE_PAREN      shift and go to state 28


state 20

    (24) afirmacao -> ID chama . PONTO_VIRG

    PONTO_VIRG      shift and go to state 29


state 21

    (25) afirmacao -> ID atribui . PONTO_VIRG

    PONTO_VIRG      shift and go to state 30


state 22

    (11) chama -> ABRE_PAREN . listaVar FECHA_PAREN
    (12) listaVar -> . ID
    (13) listaVar -> . empty
    (14) listaVar -> . ID VIRG listaVar
    (52) empty -> .

    ID              shift and go to state 32
    FECHA_PAREN     reduce using rule 52 (empty -> .)

    listaVar                       shift and go to state 31
    empty                          shift and go to state 33

state 23

    (26) atribui -> ATRI . ladoDir
    (27) atribui -> ATRI . scan
    (30) ladoDir -> . termo ADI termo
    (31) ladoDir -> . termo SUB termo
    (32) ladoDir -> . termo
    (28) scan -> . SCAN ABRE_PAREN FECHA_PAREN
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    SCAN            shift and go to state 39
    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    ladoDir                        shift and go to state 34
    scan                           shift and go to state 35
    termo                          shift and go to state 36
    fator                          shift and go to state 41

state 24

    (45) enquanto -> ENQUANTO expressao . ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES

    ABRE_CHAVES     shift and go to state 44


state 25

    (48) expressao -> ABRE_PAREN . ID BIGGER ladoDir FECHA_PAREN
    (49) expressao -> ABRE_PAREN . ID LESS ladoDir FECHA_PAREN
    (50) expressao -> ABRE_PAREN . ID EQUALS ladoDir FECHA_PAREN
    (51) expressao -> ABRE_PAREN . ID DIFER ladoDir FECHA_PAREN

    ID              shift and go to state 45


state 26

    (46) caso -> CASO expressao . ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (47) caso -> CASO expressao . ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES

    ABRE_CHAVES     shift and go to state 46


state 27

    (29) imprimir -> IMPRIMIR ABRE_PAREN . ladoDir FECHA_PAREN PONTO_VIRG
    (30) ladoDir -> . termo ADI termo
    (31) ladoDir -> . termo SUB termo
    (32) ladoDir -> . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    ladoDir                        shift and go to state 47
    termo                          shift and go to state 36
    fator                          shift and go to state 41

state 28

    (10) funcao -> FUNCAO ID ABRE_PAREN . listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES
    (12) listaVar -> . ID
    (13) listaVar -> . empty
    (14) listaVar -> . ID VIRG listaVar
    (52) empty -> .

    ID              shift and go to state 32
    FECHA_PAREN     reduce using rule 52 (empty -> .)

    listaVar                       shift and go to state 48
    empty                          shift and go to state 33

state 29

    (24) afirmacao -> ID chama PONTO_VIRG .

    ID              reduce using rule 24 (afirmacao -> ID chama PONTO_VIRG .)
    ENQUANTO        reduce using rule 24 (afirmacao -> ID chama PONTO_VIRG .)
    CASO            reduce using rule 24 (afirmacao -> ID chama PONTO_VIRG .)
    IMPRIMIR        reduce using rule 24 (afirmacao -> ID chama PONTO_VIRG .)
    FECHA_CHAVES    reduce using rule 24 (afirmacao -> ID chama PONTO_VIRG .)
    FUNCAO          reduce using rule 24 (afirmacao -> ID chama PONTO_VIRG .)
    RETORNAR        reduce using rule 24 (afirmacao -> ID chama PONTO_VIRG .)


state 30

    (25) afirmacao -> ID atribui PONTO_VIRG .

    ID              reduce using rule 25 (afirmacao -> ID atribui PONTO_VIRG .)
    ENQUANTO        reduce using rule 25 (afirmacao -> ID atribui PONTO_VIRG .)
    CASO            reduce using rule 25 (afirmacao -> ID atribui PONTO_VIRG .)
    IMPRIMIR        reduce using rule 25 (afirmacao -> ID atribui PONTO_VIRG .)
    FECHA_CHAVES    reduce using rule 25 (afirmacao -> ID atribui PONTO_VIRG .)
    FUNCAO          reduce using rule 25 (afirmacao -> ID atribui PONTO_VIRG .)
    RETORNAR        reduce using rule 25 (afirmacao -> ID atribui PONTO_VIRG .)


state 31

    (11) chama -> ABRE_PAREN listaVar . FECHA_PAREN

    FECHA_PAREN     shift and go to state 49


state 32

    (12) listaVar -> ID .
    (14) listaVar -> ID . VIRG listaVar

    FECHA_PAREN     reduce using rule 12 (listaVar -> ID .)
    VIRG            shift and go to state 50


state 33

    (13) listaVar -> empty .

    FECHA_PAREN     reduce using rule 13 (listaVar -> empty .)


state 34

    (26) atribui -> ATRI ladoDir .

    PONTO_VIRG      reduce using rule 26 (atribui -> ATRI ladoDir .)


state 35

    (27) atribui -> ATRI scan .

    PONTO_VIRG      reduce using rule 27 (atribui -> ATRI scan .)


state 36

    (30) ladoDir -> termo . ADI termo
    (31) ladoDir -> termo . SUB termo
    (32) ladoDir -> termo .

    ADI             shift and go to state 51
    SUB             shift and go to state 52
    PONTO_VIRG      reduce using rule 32 (ladoDir -> termo .)
    FECHA_PAREN     reduce using rule 32 (ladoDir -> termo .)


state 37

    (37) fator -> ADI . NUMERO
    (40) fator -> ADI . ID

    NUMERO          shift and go to state 53
    ID              shift and go to state 54


state 38

    (38) fator -> SUB . NUMERO
    (41) fator -> SUB . ID

    NUMERO          shift and go to state 55
    ID              shift and go to state 56


state 39

    (28) scan -> SCAN . ABRE_PAREN FECHA_PAREN

    ABRE_PAREN      shift and go to state 57


state 40

    (43) fator -> ABRE_PAREN . ladoDir FECHA_PAREN PONTO_VIRG
    (30) ladoDir -> . termo ADI termo
    (31) ladoDir -> . termo SUB termo
    (32) ladoDir -> . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    ladoDir                        shift and go to state 58
    termo                          shift and go to state 36
    fator                          shift and go to state 41

state 41

    (34) termo -> fator .
    (35) termo -> fator . MULT fator
    (36) termo -> fator . DIV fator

    ADI             reduce using rule 34 (termo -> fator .)
    SUB             reduce using rule 34 (termo -> fator .)
    PONTO_VIRG      reduce using rule 34 (termo -> fator .)
    FECHA_PAREN     reduce using rule 34 (termo -> fator .)
    MULT            shift and go to state 59
    DIV             shift and go to state 60


state 42

    (39) fator -> NUMERO .

    MULT            reduce using rule 39 (fator -> NUMERO .)
    DIV             reduce using rule 39 (fator -> NUMERO .)
    ADI             reduce using rule 39 (fator -> NUMERO .)
    SUB             reduce using rule 39 (fator -> NUMERO .)
    PONTO_VIRG      reduce using rule 39 (fator -> NUMERO .)
    FECHA_PAREN     reduce using rule 39 (fator -> NUMERO .)


state 43

    (42) fator -> ID .
    (44) fator -> ID . chama
    (11) chama -> . ABRE_PAREN listaVar FECHA_PAREN

    MULT            reduce using rule 42 (fator -> ID .)
    DIV             reduce using rule 42 (fator -> ID .)
    ADI             reduce using rule 42 (fator -> ID .)
    SUB             reduce using rule 42 (fator -> ID .)
    PONTO_VIRG      reduce using rule 42 (fator -> ID .)
    FECHA_PAREN     reduce using rule 42 (fator -> ID .)
    ABRE_PAREN      shift and go to state 22

    chama                          shift and go to state 61

state 44

    (45) enquanto -> ENQUANTO expressao ABRE_CHAVES . declaracoes_sem_func FECHA_CHAVES
    (6) declaracoes_sem_func -> . declaracoes_sem_func listaAfirm
    (7) declaracoes_sem_func -> . empty
    (52) empty -> .

    FECHA_CHAVES    reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

    declaracoes_sem_func           shift and go to state 62
    empty                          shift and go to state 63

state 45

    (48) expressao -> ABRE_PAREN ID . BIGGER ladoDir FECHA_PAREN
    (49) expressao -> ABRE_PAREN ID . LESS ladoDir FECHA_PAREN
    (50) expressao -> ABRE_PAREN ID . EQUALS ladoDir FECHA_PAREN
    (51) expressao -> ABRE_PAREN ID . DIFER ladoDir FECHA_PAREN

    BIGGER          shift and go to state 64
    LESS            shift and go to state 65
    EQUALS          shift and go to state 66
    DIFER           shift and go to state 67


state 46

    (46) caso -> CASO expressao ABRE_CHAVES . declaracoes_sem_func FECHA_CHAVES
    (47) caso -> CASO expressao ABRE_CHAVES . declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (6) declaracoes_sem_func -> . declaracoes_sem_func listaAfirm
    (7) declaracoes_sem_func -> . empty
    (52) empty -> .

    FECHA_CHAVES    reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

    declaracoes_sem_func           shift and go to state 68
    empty                          shift and go to state 63

state 47

    (29) imprimir -> IMPRIMIR ABRE_PAREN ladoDir . FECHA_PAREN PONTO_VIRG

    FECHA_PAREN     shift and go to state 69


state 48

    (10) funcao -> FUNCAO ID ABRE_PAREN listaVar . FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES

    FECHA_PAREN     shift and go to state 70


state 49

    (11) chama -> ABRE_PAREN listaVar FECHA_PAREN .

    PONTO_VIRG      reduce using rule 11 (chama -> ABRE_PAREN listaVar FECHA_PAREN .)
    MULT            reduce using rule 11 (chama -> ABRE_PAREN listaVar FECHA_PAREN .)
    DIV             reduce using rule 11 (chama -> ABRE_PAREN listaVar FECHA_PAREN .)
    ADI             reduce using rule 11 (chama -> ABRE_PAREN listaVar FECHA_PAREN .)
    SUB             reduce using rule 11 (chama -> ABRE_PAREN listaVar FECHA_PAREN .)
    FECHA_PAREN     reduce using rule 11 (chama -> ABRE_PAREN listaVar FECHA_PAREN .)


state 50

    (14) listaVar -> ID VIRG . listaVar
    (12) listaVar -> . ID
    (13) listaVar -> . empty
    (14) listaVar -> . ID VIRG listaVar
    (52) empty -> .

    ID              shift and go to state 32
    FECHA_PAREN     reduce using rule 52 (empty -> .)

    listaVar                       shift and go to state 71
    empty                          shift and go to state 33

state 51

    (30) ladoDir -> termo ADI . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    termo                          shift and go to state 72
    fator                          shift and go to state 41

state 52

    (31) ladoDir -> termo SUB . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    termo                          shift and go to state 73
    fator                          shift and go to state 41

state 53

    (37) fator -> ADI NUMERO .

    MULT            reduce using rule 37 (fator -> ADI NUMERO .)
    DIV             reduce using rule 37 (fator -> ADI NUMERO .)
    ADI             reduce using rule 37 (fator -> ADI NUMERO .)
    SUB             reduce using rule 37 (fator -> ADI NUMERO .)
    PONTO_VIRG      reduce using rule 37 (fator -> ADI NUMERO .)
    FECHA_PAREN     reduce using rule 37 (fator -> ADI NUMERO .)


state 54

    (40) fator -> ADI ID .

    MULT            reduce using rule 40 (fator -> ADI ID .)
    DIV             reduce using rule 40 (fator -> ADI ID .)
    ADI             reduce using rule 40 (fator -> ADI ID .)
    SUB             reduce using rule 40 (fator -> ADI ID .)
    PONTO_VIRG      reduce using rule 40 (fator -> ADI ID .)
    FECHA_PAREN     reduce using rule 40 (fator -> ADI ID .)


state 55

    (38) fator -> SUB NUMERO .

    MULT            reduce using rule 38 (fator -> SUB NUMERO .)
    DIV             reduce using rule 38 (fator -> SUB NUMERO .)
    ADI             reduce using rule 38 (fator -> SUB NUMERO .)
    SUB             reduce using rule 38 (fator -> SUB NUMERO .)
    PONTO_VIRG      reduce using rule 38 (fator -> SUB NUMERO .)
    FECHA_PAREN     reduce using rule 38 (fator -> SUB NUMERO .)


state 56

    (41) fator -> SUB ID .

    MULT            reduce using rule 41 (fator -> SUB ID .)
    DIV             reduce using rule 41 (fator -> SUB ID .)
    ADI             reduce using rule 41 (fator -> SUB ID .)
    SUB             reduce using rule 41 (fator -> SUB ID .)
    PONTO_VIRG      reduce using rule 41 (fator -> SUB ID .)
    FECHA_PAREN     reduce using rule 41 (fator -> SUB ID .)


state 57

    (28) scan -> SCAN ABRE_PAREN . FECHA_PAREN

    FECHA_PAREN     shift and go to state 74


state 58

    (43) fator -> ABRE_PAREN ladoDir . FECHA_PAREN PONTO_VIRG

    FECHA_PAREN     shift and go to state 75


state 59

    (35) termo -> fator MULT . fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    fator                          shift and go to state 76

state 60

    (36) termo -> fator DIV . fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    fator                          shift and go to state 77

state 61

    (44) fator -> ID chama .

    MULT            reduce using rule 44 (fator -> ID chama .)
    DIV             reduce using rule 44 (fator -> ID chama .)
    ADI             reduce using rule 44 (fator -> ID chama .)
    SUB             reduce using rule 44 (fator -> ID chama .)
    PONTO_VIRG      reduce using rule 44 (fator -> ID chama .)
    FECHA_PAREN     reduce using rule 44 (fator -> ID chama .)


state 62

    (45) enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func . FECHA_CHAVES
    (6) declaracoes_sem_func -> declaracoes_sem_func . listaAfirm
    (15) listaAfirm -> . listaAfirm afirmacao
    (16) listaAfirm -> . empty
    (52) empty -> .

  ! shift/reduce conflict for FECHA_CHAVES resolved as shift
    FECHA_CHAVES    shift and go to state 78
    ID              reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

  ! FECHA_CHAVES    [ reduce using rule 52 (empty -> .) ]

    listaAfirm                     shift and go to state 79
    empty                          shift and go to state 10

state 63

    (7) declaracoes_sem_func -> empty .

    FECHA_CHAVES    reduce using rule 7 (declaracoes_sem_func -> empty .)
    ID              reduce using rule 7 (declaracoes_sem_func -> empty .)
    ENQUANTO        reduce using rule 7 (declaracoes_sem_func -> empty .)
    CASO            reduce using rule 7 (declaracoes_sem_func -> empty .)
    IMPRIMIR        reduce using rule 7 (declaracoes_sem_func -> empty .)


state 64

    (48) expressao -> ABRE_PAREN ID BIGGER . ladoDir FECHA_PAREN
    (30) ladoDir -> . termo ADI termo
    (31) ladoDir -> . termo SUB termo
    (32) ladoDir -> . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    ladoDir                        shift and go to state 80
    termo                          shift and go to state 36
    fator                          shift and go to state 41

state 65

    (49) expressao -> ABRE_PAREN ID LESS . ladoDir FECHA_PAREN
    (30) ladoDir -> . termo ADI termo
    (31) ladoDir -> . termo SUB termo
    (32) ladoDir -> . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    ladoDir                        shift and go to state 81
    termo                          shift and go to state 36
    fator                          shift and go to state 41

state 66

    (50) expressao -> ABRE_PAREN ID EQUALS . ladoDir FECHA_PAREN
    (30) ladoDir -> . termo ADI termo
    (31) ladoDir -> . termo SUB termo
    (32) ladoDir -> . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    ladoDir                        shift and go to state 82
    termo                          shift and go to state 36
    fator                          shift and go to state 41

state 67

    (51) expressao -> ABRE_PAREN ID DIFER . ladoDir FECHA_PAREN
    (30) ladoDir -> . termo ADI termo
    (31) ladoDir -> . termo SUB termo
    (32) ladoDir -> . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    ladoDir                        shift and go to state 83
    termo                          shift and go to state 36
    fator                          shift and go to state 41

state 68

    (46) caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func . FECHA_CHAVES
    (47) caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func . FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (6) declaracoes_sem_func -> declaracoes_sem_func . listaAfirm
    (15) listaAfirm -> . listaAfirm afirmacao
    (16) listaAfirm -> . empty
    (52) empty -> .

  ! shift/reduce conflict for FECHA_CHAVES resolved as shift
    FECHA_CHAVES    shift and go to state 84
    ID              reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

  ! FECHA_CHAVES    [ reduce using rule 52 (empty -> .) ]

    listaAfirm                     shift and go to state 79
    empty                          shift and go to state 10

state 69

    (29) imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN . PONTO_VIRG

    PONTO_VIRG      shift and go to state 85


state 70

    (10) funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN . ABRE_CHAVES declaracoes_para_func FECHA_CHAVES

    ABRE_CHAVES     shift and go to state 86


state 71

    (14) listaVar -> ID VIRG listaVar .

    FECHA_PAREN     reduce using rule 14 (listaVar -> ID VIRG listaVar .)


state 72

    (30) ladoDir -> termo ADI termo .

    PONTO_VIRG      reduce using rule 30 (ladoDir -> termo ADI termo .)
    FECHA_PAREN     reduce using rule 30 (ladoDir -> termo ADI termo .)


state 73

    (31) ladoDir -> termo SUB termo .

    PONTO_VIRG      reduce using rule 31 (ladoDir -> termo SUB termo .)
    FECHA_PAREN     reduce using rule 31 (ladoDir -> termo SUB termo .)


state 74

    (28) scan -> SCAN ABRE_PAREN FECHA_PAREN .

    PONTO_VIRG      reduce using rule 28 (scan -> SCAN ABRE_PAREN FECHA_PAREN .)


state 75

    (43) fator -> ABRE_PAREN ladoDir FECHA_PAREN . PONTO_VIRG

    PONTO_VIRG      shift and go to state 87


state 76

    (35) termo -> fator MULT fator .

    ADI             reduce using rule 35 (termo -> fator MULT fator .)
    SUB             reduce using rule 35 (termo -> fator MULT fator .)
    PONTO_VIRG      reduce using rule 35 (termo -> fator MULT fator .)
    FECHA_PAREN     reduce using rule 35 (termo -> fator MULT fator .)


state 77

    (36) termo -> fator DIV fator .

    ADI             reduce using rule 36 (termo -> fator DIV fator .)
    SUB             reduce using rule 36 (termo -> fator DIV fator .)
    PONTO_VIRG      reduce using rule 36 (termo -> fator DIV fator .)
    FECHA_PAREN     reduce using rule 36 (termo -> fator DIV fator .)


state 78

    (45) enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .

    ID              reduce using rule 45 (enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    ENQUANTO        reduce using rule 45 (enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    CASO            reduce using rule 45 (enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    IMPRIMIR        reduce using rule 45 (enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    FECHA_CHAVES    reduce using rule 45 (enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    FUNCAO          reduce using rule 45 (enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    RETORNAR        reduce using rule 45 (enquanto -> ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)


state 79

    (6) declaracoes_sem_func -> declaracoes_sem_func listaAfirm .
    (15) listaAfirm -> listaAfirm . afirmacao
    (19) afirmacao -> . enquanto
    (20) afirmacao -> . caso
    (21) afirmacao -> . imprimir
    (24) afirmacao -> . ID chama PONTO_VIRG
    (25) afirmacao -> . ID atribui PONTO_VIRG
    (45) enquanto -> . ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (46) caso -> . CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (47) caso -> . CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (29) imprimir -> . IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENQUANTO resolved as shift
  ! shift/reduce conflict for CASO resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
    FECHA_CHAVES    reduce using rule 6 (declaracoes_sem_func -> declaracoes_sem_func listaAfirm .)
    ID              shift and go to state 15
    ENQUANTO        shift and go to state 16
    CASO            shift and go to state 17
    IMPRIMIR        shift and go to state 18

  ! ID              [ reduce using rule 6 (declaracoes_sem_func -> declaracoes_sem_func listaAfirm .) ]
  ! ENQUANTO        [ reduce using rule 6 (declaracoes_sem_func -> declaracoes_sem_func listaAfirm .) ]
  ! CASO            [ reduce using rule 6 (declaracoes_sem_func -> declaracoes_sem_func listaAfirm .) ]
  ! IMPRIMIR        [ reduce using rule 6 (declaracoes_sem_func -> declaracoes_sem_func listaAfirm .) ]

    afirmacao                      shift and go to state 11
    enquanto                       shift and go to state 12
    caso                           shift and go to state 13
    imprimir                       shift and go to state 14

state 80

    (48) expressao -> ABRE_PAREN ID BIGGER ladoDir . FECHA_PAREN

    FECHA_PAREN     shift and go to state 88


state 81

    (49) expressao -> ABRE_PAREN ID LESS ladoDir . FECHA_PAREN

    FECHA_PAREN     shift and go to state 89


state 82

    (50) expressao -> ABRE_PAREN ID EQUALS ladoDir . FECHA_PAREN

    FECHA_PAREN     shift and go to state 90


state 83

    (51) expressao -> ABRE_PAREN ID DIFER ladoDir . FECHA_PAREN

    FECHA_PAREN     shift and go to state 91


state 84

    (46) caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .
    (47) caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES . SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES

    ID              reduce using rule 46 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    ENQUANTO        reduce using rule 46 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    CASO            reduce using rule 46 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    IMPRIMIR        reduce using rule 46 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    FECHA_CHAVES    reduce using rule 46 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    FUNCAO          reduce using rule 46 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    RETORNAR        reduce using rule 46 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    SENAO           shift and go to state 92


state 85

    (29) imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .

    ID              reduce using rule 29 (imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    ENQUANTO        reduce using rule 29 (imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    CASO            reduce using rule 29 (imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    IMPRIMIR        reduce using rule 29 (imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    FECHA_CHAVES    reduce using rule 29 (imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    FUNCAO          reduce using rule 29 (imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    RETORNAR        reduce using rule 29 (imprimir -> IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)


state 86

    (10) funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES . declaracoes_para_func FECHA_CHAVES
    (8) declaracoes_para_func -> . declaracoes_para_func listaAfirmFunc
    (9) declaracoes_para_func -> . empty
    (52) empty -> .

    FECHA_CHAVES    reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    RETORNAR        reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

    declaracoes_para_func          shift and go to state 93
    empty                          shift and go to state 94

state 87

    (43) fator -> ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .

    MULT            reduce using rule 43 (fator -> ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    DIV             reduce using rule 43 (fator -> ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    ADI             reduce using rule 43 (fator -> ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    SUB             reduce using rule 43 (fator -> ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    PONTO_VIRG      reduce using rule 43 (fator -> ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    FECHA_PAREN     reduce using rule 43 (fator -> ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)


state 88

    (48) expressao -> ABRE_PAREN ID BIGGER ladoDir FECHA_PAREN .

    ABRE_CHAVES     reduce using rule 48 (expressao -> ABRE_PAREN ID BIGGER ladoDir FECHA_PAREN .)


state 89

    (49) expressao -> ABRE_PAREN ID LESS ladoDir FECHA_PAREN .

    ABRE_CHAVES     reduce using rule 49 (expressao -> ABRE_PAREN ID LESS ladoDir FECHA_PAREN .)


state 90

    (50) expressao -> ABRE_PAREN ID EQUALS ladoDir FECHA_PAREN .

    ABRE_CHAVES     reduce using rule 50 (expressao -> ABRE_PAREN ID EQUALS ladoDir FECHA_PAREN .)


state 91

    (51) expressao -> ABRE_PAREN ID DIFER ladoDir FECHA_PAREN .

    ABRE_CHAVES     reduce using rule 51 (expressao -> ABRE_PAREN ID DIFER ladoDir FECHA_PAREN .)


state 92

    (47) caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO . ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES

    ABRE_CHAVES     shift and go to state 95


state 93

    (10) funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func . FECHA_CHAVES
    (8) declaracoes_para_func -> declaracoes_para_func . listaAfirmFunc
    (17) listaAfirmFunc -> . listaAfirmFunc afirmacaoFunc
    (18) listaAfirmFunc -> . empty
    (52) empty -> .

  ! shift/reduce conflict for FECHA_CHAVES resolved as shift
    FECHA_CHAVES    shift and go to state 96
    ID              reduce using rule 52 (empty -> .)
    RETORNAR        reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

  ! FECHA_CHAVES    [ reduce using rule 52 (empty -> .) ]

    listaAfirmFunc                 shift and go to state 97
    empty                          shift and go to state 98

state 94

    (9) declaracoes_para_func -> empty .

    FECHA_CHAVES    reduce using rule 9 (declaracoes_para_func -> empty .)
    ID              reduce using rule 9 (declaracoes_para_func -> empty .)
    RETORNAR        reduce using rule 9 (declaracoes_para_func -> empty .)
    ENQUANTO        reduce using rule 9 (declaracoes_para_func -> empty .)
    CASO            reduce using rule 9 (declaracoes_para_func -> empty .)
    IMPRIMIR        reduce using rule 9 (declaracoes_para_func -> empty .)


state 95

    (47) caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES . declaracoes_sem_func FECHA_CHAVES
    (6) declaracoes_sem_func -> . declaracoes_sem_func listaAfirm
    (7) declaracoes_sem_func -> . empty
    (52) empty -> .

    FECHA_CHAVES    reduce using rule 52 (empty -> .)
    ID              reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

    declaracoes_sem_func           shift and go to state 99
    empty                          shift and go to state 63

state 96

    (10) funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES .

    FECHA_CHAVES    reduce using rule 10 (funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES .)
    FUNCAO          reduce using rule 10 (funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES .)
    ID              reduce using rule 10 (funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES .)
    ENQUANTO        reduce using rule 10 (funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES .)
    CASO            reduce using rule 10 (funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES .)
    IMPRIMIR        reduce using rule 10 (funcao -> FUNCAO ID ABRE_PAREN listaVar FECHA_PAREN ABRE_CHAVES declaracoes_para_func FECHA_CHAVES .)


state 97

    (8) declaracoes_para_func -> declaracoes_para_func listaAfirmFunc .
    (17) listaAfirmFunc -> listaAfirmFunc . afirmacaoFunc
    (22) afirmacaoFunc -> . afirmacao
    (23) afirmacaoFunc -> . retornar
    (19) afirmacao -> . enquanto
    (20) afirmacao -> . caso
    (21) afirmacao -> . imprimir
    (24) afirmacao -> . ID chama PONTO_VIRG
    (25) afirmacao -> . ID atribui PONTO_VIRG
    (33) retornar -> . RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (45) enquanto -> . ENQUANTO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (46) caso -> . CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (47) caso -> . CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES
    (29) imprimir -> . IMPRIMIR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RETORNAR resolved as shift
  ! shift/reduce conflict for ENQUANTO resolved as shift
  ! shift/reduce conflict for CASO resolved as shift
  ! shift/reduce conflict for IMPRIMIR resolved as shift
    FECHA_CHAVES    reduce using rule 8 (declaracoes_para_func -> declaracoes_para_func listaAfirmFunc .)
    ID              shift and go to state 15
    RETORNAR        shift and go to state 103
    ENQUANTO        shift and go to state 16
    CASO            shift and go to state 17
    IMPRIMIR        shift and go to state 18

  ! ID              [ reduce using rule 8 (declaracoes_para_func -> declaracoes_para_func listaAfirmFunc .) ]
  ! RETORNAR        [ reduce using rule 8 (declaracoes_para_func -> declaracoes_para_func listaAfirmFunc .) ]
  ! ENQUANTO        [ reduce using rule 8 (declaracoes_para_func -> declaracoes_para_func listaAfirmFunc .) ]
  ! CASO            [ reduce using rule 8 (declaracoes_para_func -> declaracoes_para_func listaAfirmFunc .) ]
  ! IMPRIMIR        [ reduce using rule 8 (declaracoes_para_func -> declaracoes_para_func listaAfirmFunc .) ]

    afirmacaoFunc                  shift and go to state 100
    afirmacao                      shift and go to state 101
    retornar                       shift and go to state 102
    enquanto                       shift and go to state 12
    caso                           shift and go to state 13
    imprimir                       shift and go to state 14

state 98

    (18) listaAfirmFunc -> empty .

    ID              reduce using rule 18 (listaAfirmFunc -> empty .)
    RETORNAR        reduce using rule 18 (listaAfirmFunc -> empty .)
    ENQUANTO        reduce using rule 18 (listaAfirmFunc -> empty .)
    CASO            reduce using rule 18 (listaAfirmFunc -> empty .)
    IMPRIMIR        reduce using rule 18 (listaAfirmFunc -> empty .)
    FECHA_CHAVES    reduce using rule 18 (listaAfirmFunc -> empty .)


state 99

    (47) caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func . FECHA_CHAVES
    (6) declaracoes_sem_func -> declaracoes_sem_func . listaAfirm
    (15) listaAfirm -> . listaAfirm afirmacao
    (16) listaAfirm -> . empty
    (52) empty -> .

  ! shift/reduce conflict for FECHA_CHAVES resolved as shift
    FECHA_CHAVES    shift and go to state 104
    ID              reduce using rule 52 (empty -> .)
    ENQUANTO        reduce using rule 52 (empty -> .)
    CASO            reduce using rule 52 (empty -> .)
    IMPRIMIR        reduce using rule 52 (empty -> .)

  ! FECHA_CHAVES    [ reduce using rule 52 (empty -> .) ]

    listaAfirm                     shift and go to state 79
    empty                          shift and go to state 10

state 100

    (17) listaAfirmFunc -> listaAfirmFunc afirmacaoFunc .

    ID              reduce using rule 17 (listaAfirmFunc -> listaAfirmFunc afirmacaoFunc .)
    RETORNAR        reduce using rule 17 (listaAfirmFunc -> listaAfirmFunc afirmacaoFunc .)
    ENQUANTO        reduce using rule 17 (listaAfirmFunc -> listaAfirmFunc afirmacaoFunc .)
    CASO            reduce using rule 17 (listaAfirmFunc -> listaAfirmFunc afirmacaoFunc .)
    IMPRIMIR        reduce using rule 17 (listaAfirmFunc -> listaAfirmFunc afirmacaoFunc .)
    FECHA_CHAVES    reduce using rule 17 (listaAfirmFunc -> listaAfirmFunc afirmacaoFunc .)


state 101

    (22) afirmacaoFunc -> afirmacao .

    ID              reduce using rule 22 (afirmacaoFunc -> afirmacao .)
    RETORNAR        reduce using rule 22 (afirmacaoFunc -> afirmacao .)
    ENQUANTO        reduce using rule 22 (afirmacaoFunc -> afirmacao .)
    CASO            reduce using rule 22 (afirmacaoFunc -> afirmacao .)
    IMPRIMIR        reduce using rule 22 (afirmacaoFunc -> afirmacao .)
    FECHA_CHAVES    reduce using rule 22 (afirmacaoFunc -> afirmacao .)


state 102

    (23) afirmacaoFunc -> retornar .

    ID              reduce using rule 23 (afirmacaoFunc -> retornar .)
    RETORNAR        reduce using rule 23 (afirmacaoFunc -> retornar .)
    ENQUANTO        reduce using rule 23 (afirmacaoFunc -> retornar .)
    CASO            reduce using rule 23 (afirmacaoFunc -> retornar .)
    IMPRIMIR        reduce using rule 23 (afirmacaoFunc -> retornar .)
    FECHA_CHAVES    reduce using rule 23 (afirmacaoFunc -> retornar .)


state 103

    (33) retornar -> RETORNAR . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG

    ABRE_PAREN      shift and go to state 105


state 104

    (47) caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .

    ID              reduce using rule 47 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    ENQUANTO        reduce using rule 47 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    CASO            reduce using rule 47 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    IMPRIMIR        reduce using rule 47 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    FECHA_CHAVES    reduce using rule 47 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    FUNCAO          reduce using rule 47 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)
    RETORNAR        reduce using rule 47 (caso -> CASO expressao ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES SENAO ABRE_CHAVES declaracoes_sem_func FECHA_CHAVES .)


state 105

    (33) retornar -> RETORNAR ABRE_PAREN . ladoDir FECHA_PAREN PONTO_VIRG
    (30) ladoDir -> . termo ADI termo
    (31) ladoDir -> . termo SUB termo
    (32) ladoDir -> . termo
    (34) termo -> . fator
    (35) termo -> . fator MULT fator
    (36) termo -> . fator DIV fator
    (37) fator -> . ADI NUMERO
    (38) fator -> . SUB NUMERO
    (39) fator -> . NUMERO
    (40) fator -> . ADI ID
    (41) fator -> . SUB ID
    (42) fator -> . ID
    (43) fator -> . ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG
    (44) fator -> . ID chama

    ADI             shift and go to state 37
    SUB             shift and go to state 38
    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    ABRE_PAREN      shift and go to state 40

    ladoDir                        shift and go to state 106
    termo                          shift and go to state 36
    fator                          shift and go to state 41

state 106

    (33) retornar -> RETORNAR ABRE_PAREN ladoDir . FECHA_PAREN PONTO_VIRG

    FECHA_PAREN     shift and go to state 107


state 107

    (33) retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN . PONTO_VIRG

    PONTO_VIRG      shift and go to state 108


state 108

    (33) retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .

    ID              reduce using rule 33 (retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    RETORNAR        reduce using rule 33 (retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    ENQUANTO        reduce using rule 33 (retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    CASO            reduce using rule 33 (retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    IMPRIMIR        reduce using rule 33 (retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)
    FECHA_CHAVES    reduce using rule 33 (retornar -> RETORNAR ABRE_PAREN ladoDir FECHA_PAREN PONTO_VIRG .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FECHA_CHAVES in state 4 resolved as shift
WARNING: shift/reduce conflict for FUNCAO in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for ENQUANTO in state 8 resolved as shift
WARNING: shift/reduce conflict for CASO in state 8 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 8 resolved as shift
WARNING: shift/reduce conflict for FECHA_CHAVES in state 62 resolved as shift
WARNING: shift/reduce conflict for FECHA_CHAVES in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 79 resolved as shift
WARNING: shift/reduce conflict for ENQUANTO in state 79 resolved as shift
WARNING: shift/reduce conflict for CASO in state 79 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 79 resolved as shift
WARNING: shift/reduce conflict for FECHA_CHAVES in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for RETORNAR in state 97 resolved as shift
WARNING: shift/reduce conflict for ENQUANTO in state 97 resolved as shift
WARNING: shift/reduce conflict for CASO in state 97 resolved as shift
WARNING: shift/reduce conflict for IMPRIMIR in state 97 resolved as shift
WARNING: shift/reduce conflict for FECHA_CHAVES in state 99 resolved as shift
